<?php
/**
 * @file
 * A block module that displays recent blog and forum posts.
 */
/**
 * Implements hook_help().
 * @param  $path
 * @param  $arg
 * @return string
 */
function current_posts_help($path, $arg) {
  switch ($path) {
    case 'admin/help#current_posts':
      return t('Displays links to nodes created on this date');
      break;
  }
}

/**
 * Implements hook_block_info
 *
 * Define the current_posts block
 */
function current_posts_block_info() {
  $blocks['current_posts'] = array(
    // The name that will appear in the block list
    'info' => t('Current posts'),
    // Default setting
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  return $blocks;
}

/**
 * Retrieves the current enabled posts from a week ago
 */
function current_posts_contents() {
  $today = getdate();
  $start_time = mktime(0, 0, 0, $today['mon'], ($today['mday'] - 7), $today['year']);
  $end_time = time();

  // Use Database API to retrieve current posts.
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created'))
    ->condition('status', 1)
    ->condition('created', array($start_time, $end_time), 'BETWEEN')
    ->orderBy('created', 'DESC')
    ->execute();

  return $query;
}

/**
 * Implements hook_block_view
 * @param  string
 * @return [type]
 */
function current_posts_block_view($delta = '') {
  // Check access
  switch ($delta) {
    case 'current_posts':
      // Set the block title
      $block['subject'] = t('Current posts');

      // Verify user's permission
      if(user_access('acccess content')) {
        // Retrieve the current posts
        $result = current_posts_contents();
        // Array to contain items for the block to render
        $items = array();

        // Iterate over the result set and format as links
        foreach ($result as $node) {
          $items[] = array(
            'data' => l($node->title, 'node/' . $node->nid)
          );
        }

        // No content in the last week
        if(empty($items)) {
          $block['content'] = t('No posts available');
        } else {
          // Pass data through theme function
          $block['content'] = theme('item_list', array(
            'items' => $items
          ));
        }
      }
      
      return $block;
  }
}